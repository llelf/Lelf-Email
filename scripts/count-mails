#!/usr/bin/perl

use Modern::Perl;
use encoding ':locale';

our $VERSION = '-0.0.0';

my $addr_spec = do {
   use Regexp::Grammars;
   qr{
<address>

<token: address>       <local_part> \@ <domain>

<token: local_part>	<.atext>+ (?: \. <.atext>+)*
<token: atext>		\p{Alnum} | [!#\$%&'*+\-/=?^_`{|}~]

<token: domain>		<.label> (?: \. <.label> )*
<token: label>		\p{Alpha} (?: (?:<.ALNUM> | -)* <.ALNUM>)?
<token: ALNUM>		\p{Alnum}
   }x;

};


sub addr_domain {
    my ($addr) = @_;
    $addr =~ /^ $addr_spec $/x or return;
    return $/{address}{domain};
}


local $/ = undef;
my $in = <>;

# Domain names, '' for invalid emails
my @domains = map { addr_domain($_) // '' } split /\n/, $in;

# Count them
my %count = ();
$count{$_}++ for @domains;

sub comp {
    return $count{$b} <=> $count{$a} || $a cmp $b;
}

# Sort by count, or else by name, '' to the end
my @sorted = sort comp grep { length $_ } keys %count;
push @sorted, '' if exists $count{''};

# And print result for valid emails, then for invalid
say length $_ ? $_ : 'INVALID', "\t", $count{$_} for @sorted;

